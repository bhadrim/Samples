{
  "service": {
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "Hybrid service AWS and Azure VMs with tags - dynamic connections",
      "description": "Hybrid service AWS and Azure VMs with tags - dynamic connections",
      "image": "serviceicon_1.svg",
      "category": "Agostino",
      "bullets": [
        {
          "title": "Amazon EC2 VM",
          "description": "Amazon EC2 VM - Ubuntu OS, standard size"
        },
        {
          "title": "NSX-T switch",
          "description": "VMware NSX-T switch"
        }
      ],
      "providerDisplayName": "IBM",
      "longDescription": "Hybrid service AWS and Azure VMs with tags - dynamic connections",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": true,
      "updatable": "",
      "author": "camuser2@localtest.com",
      "systemTags": true
    },
    "tags": [
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "default": "${svc_instance.group}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "default": "${svc_instance.owner}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "default": "${svc_instance.name}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "default": "${svc_instance.service_instance_id}",
        "customtype": "string",
        "permission": "Read-Only"
      },
      {
        "name": "Name",
        "label": "AWS VM hostname",
        "type": "string",
        "immutable": false,
        "hidden": true,
        "required": false,
        "secured": false,
        "description": "AWS VM hostname",
        "customtype": "string",
        "permission": "Invisible",
        "default": "${input_parameters.hostname_tag}"
      }
    ],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "resthook_input",
            "label": "Input for resthook",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Input for resthook",
            "default": "Test resthook - hybrid",
            "editable": true,
            "passbyname": false,
            "dynamicDetails": {},
            "isDynamic": false
          },
          {
            "name": "azure_usr_password",
            "label": "Azure VM user password",
            "customtype": "password",
            "type": "password",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": true,
            "description": "Azure VM user password",
            "default": "^(VGVzdDY1VGVzdCE=)",
            "editable": true,
            "passbyname": false,
            "dynamicDetails": {},
            "isDynamic": false
          },
          {
            "name": "mail_address",
            "label": "Mail address",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": false,
            "default": "agostino.colussi@it.ibm.com",
            "passbyname": false,
            "dynamicDetails": {},
            "description": "Mail address"
          },
          {
            "name": "resthook_config",
            "label": "Resthook URL",
            "customtype": "sharedparameter",
            "type": "sharedparameter",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Resthook URL",
            "isDynamic": false,
            "editable": true,
            "default": "",
            "datatype": "resthook_config"
          },
          {
            "name": "mail_input",
            "label": "Mail input",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "Test mail input - hybrid",
            "description": "Mail input",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "hostname_tag",
            "label": "VM hostname tag",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "agostino-hybrid",
            "description": "VM hostname tag",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "ssh_key_name",
            "label": "SSH key name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "SSH key name",
            "isDynamic": false,
            "editable": true,
            "default": "agostino-hybrid-key",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "vpc_name_tag",
            "label": "AWS VPC name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "AWS VPC name",
            "isDynamic": false,
            "editable": true,
            "default": "CAMVPC",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "ssh_key",
            "label": "SSH key",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "AWS instance SSH key",
            "isDynamic": false,
            "editable": true,
            "default": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAgEAz4hbVIhqP67mEa1vm4+bHoneLQX5aGUv85TN81Un7IvQxZBpVM2QDjwNAvh7G51dwYCDg84LnahW35SsuYf2phYVYlC4w1cR2C8cq1tJnas7S2abRS6jS5AXGLJ13GPaqi0ikctxMep0LmdRXk+6QG/5HuiuOA+9Mii1VieDuVgxJhk7nS3YgP9MpTSPKug4HC3PIhzOrBYKsn4K5Oq/85KydzRwdL7cT+znC3jieWME3llrcNMBP8axk0bt5FhjqYnb9y/6kVne/V+bxuXPzIJPBnc8BiLpP0cjS2xcKMRySx7lfjSYEzB2ZJaRwj9Ymc7p4PsBLpTJCdiG5JomBFxh3ouy/+5MwjBTM4AF8v+QxbGmQLaVXxkpuwb/vWEPbqQQnHIL6WN9vIQT1zPV8Ef+69v37TvEfznk5CkSCQTXYZwJVpcgDZCpyzLs84uMRIrw6KO6SuSrvcKpQ/C7XhMVKy95lfbbwyXzLWIXIsexvZXWXPoKAhjiIkaW21F+zUdUl7Y83uLpqAMrBqOgfouy6DgOArufRDyp4vl0zXe48my34VeBVahWdO+PrJklm2AjXzTK9iNWVc3YlGFClqwZgrut1i74F/Lqb23Lx2yjIom7xnUtg7lP4l9j4LKFe7ClwFpoStMOg7twcD5WjUQuQcs/TPRJNBpzcf3xaps= agostino.colussi@it.ibm.com",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "aws_conn",
            "label": "AWS connection",
            "customtype": "connection",
            "type": "connection",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true,
            "default": "",
            "provider": "Amazon EC2",
            "description": "AWS connection",
            "passbyname": false,
            "dynamicDetails": {}
          },
          {
            "name": "azure_conn",
            "label": "Azure connection",
            "customtype": "connection",
            "type": "connection",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "MS Azure connection",
            "isDynamic": false,
            "editable": true,
            "default": "",
            "provider": "Microsoft Azure",
            "passbyname": false,
            "dynamicDetails": {}
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Hybrid template with tags support - Azure Virtual Server - AWS Virtual server": {
                "title": "Hybrid template with tags support - Azure Virtual Server - AWS Virtual server_cce8c1",
                "template_name": "Hybrid template with tags support - Azure Virtual Server - AWS Virtual server",
                "version": "v1.0.0",
                "id": "hybridte1ac5596a",
                "template_type": "Terraform",
                "template_content_type": "Amazon EC2,Microsoft Azure",
                "template_provider": "Amazon EC2,Microsoft Azure",
                "instance_name": "",
                "template_data_objects": {},
                "template_params": {
                  "azure_region": "West US",
                  "vim_size": "Standard_A2",
                  "name_prefix": "${input_parameters.hostname_tag}-azure",
                  "admin_user": "ibmadmin",
                  "admin_user_password": "${input_parameters.azure_usr_password}",
                  "user_public_key": "${input_parameters.ssh_key}",
                  "hostname-tag": "${input_parameters.hostname_tag}-aws",
                  "aws_region": "us-east-1",
                  "vpc_name_tag": "${input_parameters.vpc_name_tag}",
                  "subnet_name": "CAM",
                  "aws_image_size": "t2.small",
                  "public_ssh_key_name": "agostino-key-hybrid",
                  "public_ssh_key": "${input_parameters.ssh_key}",
                  "aws_image": "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*",
                  "aws_ami_owner_id": "099720109477"
                },
                "outputs": [
                  "Azure VM Public IP",
                  "Azure VM Private IP",
                  "AWS VM Public IP",
                  "azure_vm_public_ip",
                  "azure_vm_private_ip",
                  "ip_address"
                ],
                "editable": true,
                "cloud_connection_names": [
                  {
                    "provider": "Amazon EC2",
                    "connection_name": "${input_parameters.aws_conn}"
                  },
                  {
                    "provider": "Microsoft Azure",
                    "connection_name": "${input_parameters.azure_conn}"
                  }
                ],
                "provider_engine_version": "0.12.21",
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [
            {
              "resthook": {
                "title": "resthook_168fc0",
                "id": "resthookee70ad6f",
                "headers": {
                  "accept": "application/json",
                  "Content-Type": "application/json"
                },
                "url": "${datatypes.resthook_config.resthook_url}",
                "method": "POST",
                "payload": {
                  "text": "Agostino-instance name_${svc_instance.name}: ${input_parameters.resthook_input} rest hook during on create"
                },
                "on_destroy": {
                  "url": "${datatypes.resthook_config.resthook_url}",
                  "headers": {
                    "accept": "application/json",
                    "Content-Type": "application/json"
                  },
                  "method": "POST",
                  "payload": {
                    "text": "Agostino-instance name_${svc_instance.name}: rest hook during on destroy "
                  }
                },
                "warning": false,
                "error": false,
                "isErrorFlow": false,
                "editable": true
              }
            },
            {
              "resthook": {
                "title": "resthook_7f6485",
                "id": "resthookccc8f87f",
                "headers": {
                  "accept": "application/json",
                  "Content-Type": "application/json"
                },
                "url": "${datatypes.resthook_config.resthook_url}",
                "method": "POST",
                "payload": {
                  "text": "Agostino-instance name_${svc_instance.name}: rest hook during error flow "
                },
                "on_destroy": {
                  "headers": {
                    "accept": "application/json",
                    "Content-Type": "application/json"
                  },
                  "method": "POST",
                  "payload": {
                    "text": "Agostino: rest hook during error flow - destroy "
                  }
                },
                "warning": false,
                "error": false,
                "isErrorFlow": true,
                "editable": true
              }
            }
          ],
          "notifications": [
            {
              "emailnotification": {
                "title": "emailnotification_e4a855",
                "type": "email",
                "receiverList": "${input_parameters.mail_address}",
                "id": "emailnotbc9a875d",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "PROVISION: Service deploy ${svc_instance.name} succeeded",
                "body": "Mail input string: \n${input_parameters.mail_input}\n-------------------------------------------------------------\n\nService instance name: \n${svc_instance.name}\n----------------------------------------------------------------------\n\nProvisioning - resthook\n\n----------------------------------------------------------------------\nResthook payload:\n${resthooks.resthookee70ad6f.payload}\n----------------------------------------------------------------------\nResthook status:\n${resthooks.resthookee70ad6f.status}\n----------------------------------------------------------------------\nResponse body, JSON object\n${resthooks.resthookee70ad6f.body}\n----------------------------------------------------------------------\nhttp status code. For example, 200 OK:\n${resthooks.resthookee70ad6f.status_code} \n----------------------------------------------------------------------\nhttp status. For example, 200 OK:\n${resthooks.resthookee70ad6f.status_message}\n----------------------------------------------------------------------\nResthook Headers:\n${resthooks.resthookee70ad6f.headers.Content-Type}\n----------------------------------------------------------------------\n\nProvision Template\n\nTemplate Status: ${templates.hybridte1ac5596a.status}\n\n----------------------------------------------------------------------\nAzure instance public IP:\n${templates.hybridte1ac5596a.output.azure_vm_public_ip}\n----------------------------------------------------------------------\nAWS instance public IP:\n${templates.hybridte1ac5596a.output.ip_address}",
                "editable": true,
                "on_update_create": true,
                "on_update": {
                  "receiverList": "${input_parameters.mail_address}",
                  "copyToList": "",
                  "subject": "Notify update of ${svc_instance.name} instance",
                  "body": "Mail input string: \n${input_parameters.mail_input}\n-------------------------------------------------------------\n\nService instance name: \n${svc_instance.name} updated\n------------------------------------------------------------\n\nOn update -       resthook\n\n----------------------------------------------------------------------\nResthook payload:\n${resthooks.resthookee70ad6f.payload}\n----------------------------------------------------------------------\nResthook status:\n${resthooks.resthookee70ad6f.status}\n----------------------------------------------------------------------\nResponse body, JSON object\n${resthooks.resthookee70ad6f.body}\n----------------------------------------------------------------------\nhttp status code. For example, 200 OK:\n${resthooks.resthookee70ad6f.status_code} \n----------------------------------------------------------------------\nhttp status. For example, 200 OK:\n${resthooks.resthookee70ad6f.status_message}\n----------------------------------------------------------------------\nResthook Headers:\n${resthooks.resthookee70ad6f.headers.Content-Type}\n----------------------------------------------------------------------\n\nProvision Template\n\nTemplate Status: ${templates.hybridte1ac5596a.status}\n\n----------------------------------------------------------------------\nAzure instance public IP:\n${templates.hybridte1ac5596a.output.azure_vm_public_ip}\n----------------------------------------------------------------------\nAWS instance public IP:\n${templates.hybridte1ac5596a.output.ip_address}"
                },
                "on_destroy": {
                  "receiverList": "${input_parameters.mail_address}",
                  "copyToList": "",
                  "subject": "Notify destroy of ${svc_instance.name} instance",
                  "body": "Mail input string: \n${input_parameters.mail_input}\n-------------------------------------------------------------\n\nService instance name: \n${svc_instance.name} destroyed\n------------------------------------------------------------\n\nOn destroy -       resthook\n\n----------------------------------------------------------------------\nResthook payload:\n${resthooks.resthookee70ad6f.payload}\n----------------------------------------------------------------------\nResthook status:\n${resthooks.resthookee70ad6f.status}\n----------------------------------------------------------------------\nResponse body, JSON object\n${resthooks.resthookee70ad6f.body}\n----------------------------------------------------------------------\nhttp status code. For example, 200 OK:\n${resthooks.resthookee70ad6f.status_code} \n----------------------------------------------------------------------\nhttp status. For example, 200 OK:\n${resthooks.resthookee70ad6f.status_message}\n----------------------------------------------------------------------\nResthook Headers:\n${resthooks.resthookee70ad6f.headers.Content-Type}\n----------------------------------------------------------------------\n\nProvision Template\n\nTemplate Status: ${templates.hybridte1ac5596a.status}\n\n----------------------------------------------------------------------\nAzure instance public IP:\n${templates.hybridte1ac5596a.output.azure_vm_public_ip}\n----------------------------------------------------------------------\nAWS instance public IP:\n${templates.hybridte1ac5596a.output.ip_address}"
                }
              }
            },
            {
              "emailnotification": {
                "title": "emailnotification_c6732a",
                "type": "email",
                "receiverList": "agostino.colussi@it.ibm.com",
                "id": "emailnot24844347",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "PROVISION: Service deploy ${svc_instance.name} failed",
                "body": "Deployment result details:\n--------------------------\n\nOn Error Parameters\n\n----------------------------------------------------------------------\nError message for failure: \n${svc_instance.error.message}\n----------------------------------------------------------------------\nActivity id of the failed activity: \n${svc_instance.error.activity_id}\n----------------------------------------------------------------------\nType of failed activity: \n${svc_instance.error.activity_type}\n----------------------------------------------------------------------\nCreation time of the failed activity: \n${svc_instance.error.created_at}\n----------------------------------------------------------------------\n\nOther Parameters\n\n----------------------------------------------------------------------\nService instance name: \n${svc_instance.name}\n----------------------------------------------------------------------\n\nPrimary - Resthook\n\n----------------------------------------------------------------------\nResthook payload:\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.payload}\n----------------------------------------------------------------------\nResthook status:\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.status}\n----------------------------------------------------------------------\nResponse body, JSON object\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.body}\n----------------------------------------------------------------------\nhttp status code. For example, 200 OK:\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.status_code} \n----------------------------------------------------------------------\nhttp status. For example, 200 OK:\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.status_message}\n----------------------------------------------------------------------\nResthook Headers:\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.headers.Content-Type}\n----------------------------------------------------------------------\nResthook Authentication Type:\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.authentication.type}\n----------------------------------------------------------------------\nResthook Authentication User:\n${svc_instance.primaryflow.resthooks.resthookee70ad6f.authentication.username} \n----------------------------------------------------------------------\n\nPrimary - template\n\n----------------------------------------------------------------------\nDeployed template name: \n${svc_instance.primaryflow.templates.hybridte1ac5596a.template_name}\n\n----------------------------------------------------------------------\nDeployment result \n${svc_instance.primaryflow.templates.hybridte1ac5596a.status}\n\n----------------------------------------------------------------------\nTemplate instance name: \n${svc_instance.primaryflow.templates.hybridte1ac5596a.instance_name}\n\n----------------------------------------------------------------------\n\n\nOn Error flow - resthook\n\n----------------------------------------------------------------------\nResthook payload:\n${resthooks.resthookccc8f87f.status}\n----------------------------------------------------------------------\nResthook status:\n${resthooks.resthookccc8f87f.status}\n----------------------------------------------------------------------\nResponse body, JSON object\n${resthooks.resthookccc8f87f.body}\n----------------------------------------------------------------------\nhttp status code. For example, 200 OK:\n${resthooks.resthookccc8f87f.status_code} \n----------------------------------------------------------------------\nhttp status. For example, 200 OK:\n${resthooks.resthookccc8f87f.status_message}\n----------------------------------------------------------------------\nResthook Headers:\n${resthooks.resthookccc8f87f.headers.Content-Type}\n----------------------------------------------------------------------\nResthook Authentication Type:\nNot accepted\n----------------------------------------------------------------------\nResthook Authentication User:\nNot accepted\n----------------------------------------------------------------------",
                "warning": false,
                "error": false,
                "editable": true
              }
            }
          ],
          "sequence": {
            "0": "resthookee70ad6f",
            "1": "hybridte1ac5596a",
            "2": "emailnotbc9a875d"
          },
          "error_sequence": {
            "0": "resthookccc8f87f",
            "1": "emailnot24844347"
          }
        },
        "datatypes": [
          {
            "id": "resthook_config",
            "label": "Resthook Configuration",
            "description": "",
            "datatype": "resthook_config",
            "default": "${input_parameters.resthook_config}",
            "immutable": false
          }
        ],
        "output_parameters": [
          {
            "name": "service_instance_name",
            "label": "Service Instance Name",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Service Instance Name",
            "default": "${svc_instance.name}",
            "permission": "Read-Only",
            "action": "Provision"
          },
          {
            "name": "azure_vm_public_ip",
            "label": "Azure VM public IP",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Azure VM public IP",
            "default": "${templates.hybridte1ac5596a.output.azure_vm_public_ip}",
            "editable": true
          },
          {
            "name": "aws_vm_public_ip",
            "label": "AWS VM public IP",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "AWS VM public IP",
            "default": "${templates.hybridte1ac5596a.output.ip_address}"
          }
        ]
      },
      {
        "type": "bind",
        "name": "Bind",
        "description": "Bind to send mail",
        "input_parameters": [
          {
            "name": "switch_name",
            "label": "Switch Name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "",
            "default": "ago-switch-bind",
            "editable": true
          },
          {
            "name": "zone_name",
            "label": "Zone Name",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Zone Name",
            "default": "CAMDC2Zone",
            "editable": true
          },
          {
            "name": "resthook_input",
            "label": "Resthook Input",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "",
            "isDynamic": false,
            "editable": true,
            "default": "Test BIND"
          },
          {
            "name": "resthook_config",
            "label": "Resthook URL",
            "customtype": "sharedparameter",
            "type": "sharedparameter",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "description": "Resthook URL",
            "isDynamic": false,
            "editable": true,
            "default": "",
            "datatype": "resthook_config"
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [],
          "resthooks": [
            {
              "resthook": {
                "title": "resthook_4b7c4f",
                "id": "resthook08713c72",
                "headers": {
                  "accept": "application/json",
                  "Content-Type": "application/json"
                },
                "url": "${datatypes.resthook_config.resthook_url}",
                "method": "POST",
                "payload": {
                  "text": "Agostino-instance name_${svc_instance.name}: ${input_parameters.resthook_input} rest hook during Bind - on create"
                },
                "on_destroy": {
                  "url": "${datatypes.resthook_config.resthook_url}",
                  "headers": {
                    "accept": "application/json",
                    "Content-Type": "application/json"
                  },
                  "payload": {
                    "text": "Agostino-instance name_${svc_instance.name}: ${input_parameters.resthook_input} rest hook during  bind - destroy"
                  },
                  "method": "POST"
                },
                "isErrorFlow": false,
                "editable": true
              }
            },
            {
              "resthook": {
                "title": "resthook_2a9100",
                "id": "resthookc514a48b",
                "headers": {
                  "accept": "application/json",
                  "Content-Type": "application/json"
                },
                "url": "${datatypes.resthook_config.resthook_url}",
                "method": "POST",
                "payload": {
                  "text": "Agostino-instance name_${svc_instance.name}: rest hook of bind - Error flow"
                },
                "editable": true
              }
            }
          ],
          "notifications": [
            {
              "emailnotification": {
                "title": "emailnotification_87efce",
                "type": "email",
                "receiverList": "agostino.colussi@it.ibm.com",
                "id": "emailnot409c502e",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Service deployment details",
                "body": "Deployment result details\n----------------------------------------\nService instance name: ${svc_instance.output_parameters.service_instance_name}\n\nResthook input: ${input_parameters.resthook_input}\n\nResthook status: ${resthooks.resthook08713c72.status}\n\nResthook output: ${resthooks.resthook08713c72.output.body}",
                "editable": true
              }
            },
            {
              "emailnotification": {
                "title": "emailnotification_11bc73",
                "type": "email",
                "receiverList": "agostino.colussi@it.ibm.com",
                "id": "emailnotfdc55916",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "Bind in Error",
                "body": "On Error Parameters\n\n----------------------------------------------------------------------\nError message for failure: \n${svc_instance.error.message}\n----------------------------------------------------------------------\nActivity id of the failed activity: \n${svc_instance.error.activity_id}\n----------------------------------------------------------------------\nType of failed activity: \n${svc_instance.error.activity_type}\n----------------------------------------------------------------------\nCreation time of the failed activity: \n${svc_instance.error.created_at}\n----------------------------------------------------------------------",
                "editable": true
              }
            }
          ],
          "sequence": {
            "0": "resthook08713c72",
            "1": "emailnot409c502e"
          },
          "error_sequence": {
            "0": "resthookc514a48b",
            "1": "emailnotfdc55916"
          }
        },
        "datatypes": [
          {
            "id": "resthook_config",
            "label": "Resthook Configuration",
            "description": "",
            "datatype": "resthook_config",
            "default": "${input_parameters.resthook_config}",
            "immutable": false
          }
        ],
        "output_parameters": []
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": [],
        "expanded": false
      }
    ],
    "version": "1.0.0.0",
    "upgrade_from": [],
    "downgrade_to": []
  }
}
